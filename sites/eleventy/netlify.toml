##############################
# Build settings
##############################

[build]
  command = "npm run deploy:build"
  publish = "dist"

  # Default site wide settings
  # https://docs.netlify.com/configure-builds/file-based-configuration/#post-processing
  # If skip_processing = true, all other settings are ignored
  [build.processing]
    skip_processing = false
  [build.processing.html]
    pretty_urls = true
  [build.processing.css]
    bundle = false
    minify = false
  [build.processing.js]
    bundle = false
    minify = false
  [build.processing.images]
    compress = true

# Build and deployment config for `production` environment
[context.production]
  command = "npm run deploy:build"

  [context.production.environment]
    GIT_LFS_ENABLED = "true"
    NODE_ENV = "production"
    NODE_VERSION = "18"
    TZ = "Europe/London"


##############################
# Netlify dev server (local)
##############################

# Dev settings: (Used when running local Netlify dev server)
[dev]
  command = "npm run watch"
  targetPort = 8080 # The port for my application server, framework or site generator
  port = 8888 # Declaring port for netlify dev server to use when running the `npm run watch` command
  publish = "dist" # The path to my static content folder
  autoLaunch = true # A boolean value that determines if Netlify Dev launches the local server address in the browser
  envFiles = [".env"] # The env files to use, ordered by priority (left - highest, right - lowest)


##############################
# Netlify plugins
##############################
[[plugins]]
  package = "@netlify/plugin-lighthouse"

  # Set the plugin to run prior to deploy, failing the build if minimum thresholds aren't set
  [plugins.inputs]
    fail_deploy_on_score_thresholds = "true"


##############################
# Headers
##############################

# Headers (Global)
[[headers]]
  # Define which paths this specific [[headers]] block will cover.
  for = "/*"

  [headers.values]
    Content-Security-Policy = "script-src 'self' 'unsafe-inline' 'unsafe-eval' *.netlify.com unpkg.com; style-src 'self' 'unsafe-inline'; object-src 'self' 'unsafe-inline'; img-src 'self' 'unsafe-inline' *.cloudfront.net"
    Referrer-Policy = "no-referrer, strict-origin-when-cross-origin"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "SAMEORIGIN"
    X-XSS-Protection = "1; mode=block"

# Header for .ico files
[[headers]]
  for = "/*.ico"
  [headers.values]
    Content-Type = "image/x-icon"

# Header for 'normal' JS
[[headers]]
  for = "/*.js"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"

# Header for ES6 Modules
[[headers]]
  for = "/*.mjs"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"

# Header for JSON
[[headers]]
  for = "/*.json"
  [headers.values]
    Content-Type = "application/json; charset=utf-8"


##############################
# Redirects
##############################

## ########################################################################
# Redirect rule to point temporary Netlify URL to preferred domain name
# ========================================================================
# NOTE: This requires the DNS records to be updated to point to Netlify.
[[redirects]]
  from = "https://brootaylor-eleventy.netlify.app/*"
  to = "https://brootaylor.com/:splat"
  status = 301
  force = true

# Alias URLs pointing at primary domain & redirected as well
# ========================================================================
# NOTE: These require the DNS records to be updated to point to Netlify.
[[redirects]]
  from = "https://brootaylor.co.uk/*"
  to = "https://brootaylor.com/:splat"
  status = 301
  force = true

[[redirects]]
  from = "https://www.brootaylor.co.uk/*"
  to = "https://brootaylor.com/:splat"
  status = 301
  force = true

# ########################################################################
# Site-specific page redirects
# ========================================================================
# 404 pages
[[redirects]]
  from = "/*"
  to = "/error/404"
  status = 404

# ========================================================================
# NOTE: Using `_redirects-production.njk` file - (compiles to `_redirects`) - to handle page level redirects cause doesn't seem to work properly in this .toml config file for some reason.
# ========================================================================
